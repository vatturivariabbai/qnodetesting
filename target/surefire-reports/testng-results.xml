<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="11" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-12-17T14:53:31 IST" name="Suite" finished-at="2023-12-17T14:55:23 IST" duration-ms="111045">
    <groups>
    </groups>
    <test started-at="2023-12-17T14:53:31 IST" name="Test" finished-at="2023-12-17T14:55:23 IST" duration-ms="111045">
      <class name="automation.LoginTest">
        <test-method is-config="true" signature="startprocess()[pri:0, instance:automation.LoginTest@1623b78d]" started-at="2023-12-17T14:54:27 IST" name="startprocess" finished-at="2023-12-17T14:54:52 IST" duration-ms="25087" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startprocess -->
        <test-method signature="verifywithlogincredentials(java.lang.String,java.lang.String)[pri:1, instance:automation.LoginTest@1623b78d]" started-at="2023-12-17T14:54:52 IST" name="verifywithlogincredentials" data-provider="supplydata" finished-at="2023-12-17T14:54:53 IST" duration-ms="844" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demousermalay@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifywithlogincredentials -->
        <test-method is-config="true" signature="endprocess()[pri:0, instance:automation.LoginTest@1623b78d]" started-at="2023-12-17T14:54:53 IST" name="endprocess" finished-at="2023-12-17T14:54:53 IST" duration-ms="167" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endprocess -->
        <test-method is-config="true" signature="startprocess()[pri:0, instance:automation.LoginTest@1623b78d]" started-at="2023-12-17T14:54:53 IST" name="startprocess" finished-at="2023-12-17T14:55:01 IST" duration-ms="7818" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startprocess -->
        <test-method is-config="true" signature="generateStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:automation.LoginTest@1623b78d]" started-at="2023-12-17T14:54:53 IST" name="generateStatus" finished-at="2023-12-17T14:54:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void automation.LoginTest.verifywithlogincredentials(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifywithlogincredentials status=SUCCESS method=LoginTest.verifywithlogincredentials(java.lang.String,java.lang.String)[pri:1, instance:automation.LoginTest@1623b78d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateStatus -->
        <test-method signature="verifywithlogincredentials(java.lang.String,java.lang.String)[pri:1, instance:automation.LoginTest@1623b78d]" started-at="2023-12-17T14:55:01 IST" name="verifywithlogincredentials" data-provider="supplydata" finished-at="2023-12-17T14:55:01 IST" duration-ms="688" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[demouser1@gmail1.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifywithlogincredentials -->
        <test-method is-config="true" signature="endprocess()[pri:0, instance:automation.LoginTest@1623b78d]" started-at="2023-12-17T14:55:01 IST" name="endprocess" finished-at="2023-12-17T14:55:01 IST" duration-ms="120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endprocess -->
        <test-method is-config="true" signature="generateStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:automation.LoginTest@1623b78d]" started-at="2023-12-17T14:55:01 IST" name="generateStatus" finished-at="2023-12-17T14:55:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void automation.LoginTest.verifywithlogincredentials(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifywithlogincredentials status=SUCCESS method=LoginTest.verifywithlogincredentials(java.lang.String,java.lang.String)[pri:1, instance:automation.LoginTest@1623b78d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateStatus -->
        <test-method is-config="true" signature="startprocess()[pri:0, instance:automation.LoginTest@1623b78d]" started-at="2023-12-17T14:55:01 IST" name="startprocess" finished-at="2023-12-17T14:55:07 IST" duration-ms="5151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startprocess -->
        <test-method signature="verifywithinvalidlogincredentials()[pri:2, instance:automation.LoginTest@1623b78d]" started-at="2023-12-17T14:55:07 IST" name="verifywithinvalidlogincredentials" finished-at="2023-12-17T14:55:07 IST" duration-ms="559" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifywithinvalidlogincredentials -->
        <test-method is-config="true" signature="endprocess()[pri:0, instance:automation.LoginTest@1623b78d]" started-at="2023-12-17T14:55:07 IST" name="endprocess" finished-at="2023-12-17T14:55:07 IST" duration-ms="131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endprocess -->
        <test-method is-config="true" signature="generateStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:automation.LoginTest@1623b78d]" started-at="2023-12-17T14:55:07 IST" name="generateStatus" finished-at="2023-12-17T14:55:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void automation.LoginTest.verifywithinvalidlogincredentials()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifywithinvalidlogincredentials status=SUCCESS method=LoginTest.verifywithinvalidlogincredentials()[pri:2, instance:automation.LoginTest@1623b78d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateStatus -->
        <test-method is-config="true" signature="startprocess()[pri:0, instance:automation.LoginTest@1623b78d]" started-at="2023-12-17T14:55:07 IST" name="startprocess" finished-at="2023-12-17T14:55:11 IST" duration-ms="4014" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startprocess -->
        <test-method signature="verifywithvalidemailidandinvalidpassword()[pri:3, instance:automation.LoginTest@1623b78d]" started-at="2023-12-17T14:55:11 IST" name="verifywithvalidemailidandinvalidpassword" finished-at="2023-12-17T14:55:12 IST" duration-ms="472" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifywithvalidemailidandinvalidpassword -->
        <test-method is-config="true" signature="endprocess()[pri:0, instance:automation.LoginTest@1623b78d]" started-at="2023-12-17T14:55:12 IST" name="endprocess" finished-at="2023-12-17T14:55:12 IST" duration-ms="166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endprocess -->
        <test-method is-config="true" signature="generateStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:automation.LoginTest@1623b78d]" started-at="2023-12-17T14:55:12 IST" name="generateStatus" finished-at="2023-12-17T14:55:12 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void automation.LoginTest.verifywithvalidemailidandinvalidpassword()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifywithvalidemailidandinvalidpassword status=SUCCESS method=LoginTest.verifywithvalidemailidandinvalidpassword()[pri:3, instance:automation.LoginTest@1623b78d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateStatus -->
      </class> <!-- automation.LoginTest -->
      <class name="automation.SearchTest">
        <test-method is-config="true" signature="start()[pri:0, instance:automation.SearchTest@c8c12ac]" started-at="2023-12-17T14:55:12 IST" name="start" finished-at="2023-12-17T14:55:15 IST" duration-ms="3556" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method signature="searchforhplaptop()[pri:1, instance:automation.SearchTest@c8c12ac]" started-at="2023-12-17T14:55:15 IST" name="searchforhplaptop" finished-at="2023-12-17T14:55:16 IST" duration-ms="327" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchforhplaptop -->
        <test-method is-config="true" signature="end()[pri:0, instance:automation.SearchTest@c8c12ac]" started-at="2023-12-17T14:55:16 IST" name="end" finished-at="2023-12-17T14:55:16 IST" duration-ms="128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- end -->
        <test-method is-config="true" signature="generateStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:automation.SearchTest@c8c12ac]" started-at="2023-12-17T14:55:16 IST" name="generateStatus" finished-at="2023-12-17T14:55:16 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void automation.SearchTest.searchforhplaptop()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=searchforhplaptop status=SUCCESS method=SearchTest.searchforhplaptop()[pri:1, instance:automation.SearchTest@c8c12ac] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateStatus -->
        <test-method is-config="true" signature="start()[pri:0, instance:automation.SearchTest@c8c12ac]" started-at="2023-12-17T14:55:16 IST" name="start" finished-at="2023-12-17T14:55:22 IST" duration-ms="5771" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method signature="searchfornonexistingitem()[pri:2, instance:automation.SearchTest@c8c12ac]" started-at="2023-12-17T14:55:22 IST" name="searchfornonexistingitem" finished-at="2023-12-17T14:55:22 IST" duration-ms="678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchfornonexistingitem -->
        <test-method is-config="true" signature="end()[pri:0, instance:automation.SearchTest@c8c12ac]" started-at="2023-12-17T14:55:22 IST" name="end" finished-at="2023-12-17T14:55:23 IST" duration-ms="121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- end -->
        <test-method is-config="true" signature="generateStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:automation.SearchTest@c8c12ac]" started-at="2023-12-17T14:55:23 IST" name="generateStatus" finished-at="2023-12-17T14:55:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void automation.SearchTest.searchfornonexistingitem()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=searchfornonexistingitem status=SUCCESS method=SearchTest.searchfornonexistingitem()[pri:2, instance:automation.SearchTest@c8c12ac] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateStatus -->
      </class> <!-- automation.SearchTest -->
      <class name="automation.CartTest">
        <test-method is-config="true" signature="InitExentReport()[pri:0, instance:automation.CartTest@38c6f217]" started-at="2023-12-17T14:53:31 IST" name="InitExentReport" finished-at="2023-12-17T14:53:31 IST" duration-ms="200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InitExentReport -->
        <test-method is-config="true" signature="getnameMethod(org.testng.ITestContext)[pri:0, instance:automation.CartTest@38c6f217]" started-at="2023-12-17T14:53:31 IST" name="getnameMethod" finished-at="2023-12-17T14:53:31 IST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@559991f5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getnameMethod -->
        <test-method is-config="true" signature="start()[pri:0, instance:automation.CartTest@38c6f217]" started-at="2023-12-17T14:53:31 IST" name="start" finished-at="2023-12-17T14:53:44 IST" duration-ms="12981" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method signature="verifyAdddingMacbookfromhomepage()[pri:1, instance:automation.CartTest@38c6f217]" started-at="2023-12-17T14:53:44 IST" name="verifyAdddingMacbookfromhomepage" finished-at="2023-12-17T14:53:48 IST" duration-ms="3754" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAdddingMacbookfromhomepage -->
        <test-method is-config="true" signature="end()[pri:0, instance:automation.CartTest@38c6f217]" started-at="2023-12-17T14:53:48 IST" name="end" finished-at="2023-12-17T14:53:49 IST" duration-ms="356" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- end -->
        <test-method is-config="true" signature="generateStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:automation.CartTest@38c6f217]" started-at="2023-12-17T14:53:49 IST" name="generateStatus" finished-at="2023-12-17T14:53:49 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void automation.CartTest.verifyAdddingMacbookfromhomepage()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyAdddingMacbookfromhomepage status=SUCCESS method=CartTest.verifyAdddingMacbookfromhomepage()[pri:1, instance:automation.CartTest@38c6f217] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateStatus -->
        <test-method is-config="true" signature="start()[pri:0, instance:automation.CartTest@38c6f217]" started-at="2023-12-17T14:53:49 IST" name="start" finished-at="2023-12-17T14:53:54 IST" duration-ms="5592" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method signature="verifyIncreasingQuantitywithinCart()[pri:2, instance:automation.CartTest@38c6f217]" started-at="2023-12-17T14:53:54 IST" name="verifyIncreasingQuantitywithinCart" finished-at="2023-12-17T14:53:55 IST" duration-ms="800" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIncreasingQuantitywithinCart -->
        <test-method is-config="true" signature="end()[pri:0, instance:automation.CartTest@38c6f217]" started-at="2023-12-17T14:53:55 IST" name="end" finished-at="2023-12-17T14:53:55 IST" duration-ms="171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- end -->
        <test-method is-config="true" signature="generateStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:automation.CartTest@38c6f217]" started-at="2023-12-17T14:53:55 IST" name="generateStatus" finished-at="2023-12-17T14:53:55 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void automation.CartTest.verifyIncreasingQuantitywithinCart()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=verifyIncreasingQuantitywithinCart status=SUCCESS method=CartTest.verifyIncreasingQuantitywithinCart()[pri:2, instance:automation.CartTest@38c6f217] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateStatus -->
        <test-method is-config="true" signature="start()[pri:0, instance:automation.CartTest@38c6f217]" started-at="2023-12-17T14:53:55 IST" name="start" finished-at="2023-12-17T14:54:00 IST" duration-ms="5063" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method signature="VerifyEnteringInvalidCoupon()[pri:3, instance:automation.CartTest@38c6f217]" started-at="2023-12-17T14:54:00 IST" name="VerifyEnteringInvalidCoupon" finished-at="2023-12-17T14:54:02 IST" duration-ms="1412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyEnteringInvalidCoupon -->
        <test-method is-config="true" signature="end()[pri:0, instance:automation.CartTest@38c6f217]" started-at="2023-12-17T14:54:02 IST" name="end" finished-at="2023-12-17T14:54:02 IST" duration-ms="164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- end -->
        <test-method is-config="true" signature="start()[pri:0, instance:automation.CartTest@38c6f217]" started-at="2023-12-17T14:54:02 IST" name="start" finished-at="2023-12-17T14:54:08 IST" duration-ms="6040" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method is-config="true" signature="generateStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:automation.CartTest@38c6f217]" started-at="2023-12-17T14:54:02 IST" name="generateStatus" finished-at="2023-12-17T14:54:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void automation.CartTest.VerifyEnteringInvalidCoupon()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=VerifyEnteringInvalidCoupon status=SUCCESS method=CartTest.VerifyEnteringInvalidCoupon()[pri:3, instance:automation.CartTest@38c6f217] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateStatus -->
        <test-method signature="VerifyCheckoutwithoutLogin()[pri:4, instance:automation.CartTest@38c6f217]" started-at="2023-12-17T14:54:08 IST" name="VerifyCheckoutwithoutLogin" finished-at="2023-12-17T14:54:09 IST" duration-ms="895" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyCheckoutwithoutLogin -->
        <test-method is-config="true" signature="end()[pri:0, instance:automation.CartTest@38c6f217]" started-at="2023-12-17T14:54:09 IST" name="end" finished-at="2023-12-17T14:54:09 IST" duration-ms="188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- end -->
        <test-method is-config="true" signature="generateStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:automation.CartTest@38c6f217]" started-at="2023-12-17T14:54:09 IST" name="generateStatus" finished-at="2023-12-17T14:54:09 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void automation.CartTest.VerifyCheckoutwithoutLogin()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=VerifyCheckoutwithoutLogin status=SUCCESS method=CartTest.VerifyCheckoutwithoutLogin()[pri:4, instance:automation.CartTest@38c6f217] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateStatus -->
        <test-method is-config="true" signature="start()[pri:0, instance:automation.CartTest@38c6f217]" started-at="2023-12-17T14:54:09 IST" name="start" finished-at="2023-12-17T14:54:26 IST" duration-ms="16822" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method signature="VerifyabortCartpage()[pri:5, instance:automation.CartTest@38c6f217]" started-at="2023-12-17T14:54:26 IST" name="VerifyabortCartpage" finished-at="2023-12-17T14:54:26 IST" duration-ms="625" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyabortCartpage -->
        <test-method is-config="true" signature="end()[pri:0, instance:automation.CartTest@38c6f217]" started-at="2023-12-17T14:54:26 IST" name="end" finished-at="2023-12-17T14:54:27 IST" duration-ms="317" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- end -->
        <test-method is-config="true" signature="generateStatus(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:automation.CartTest@38c6f217]" started-at="2023-12-17T14:54:27 IST" name="generateStatus" finished-at="2023-12-17T14:54:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void automation.CartTest.VerifyabortCartpage()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=VerifyabortCartpage status=SUCCESS method=CartTest.VerifyabortCartpage()[pri:5, instance:automation.CartTest@38c6f217] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateStatus -->
        <test-method is-config="true" signature="generateReports()[pri:0, instance:automation.CartTest@38c6f217]" started-at="2023-12-17T14:55:23 IST" name="generateReports" finished-at="2023-12-17T14:55:24 IST" duration-ms="1586" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReports -->
      </class> <!-- automation.CartTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
